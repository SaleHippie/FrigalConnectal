import java.awt.Color;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.time.Minute;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.jfree.ui.RectangleInsets;

public class Data extends javax.swing.JFrame {
	/*
	 * To change this license header, choose License Headers in Project Properties.
	 * To change this template file, choose Tools | Templates
	 * and open the template in the editor.
	 */

	/**
	 * Creates new form Data
	 * @throws ClassNotFoundException 
	 */
	public Data() throws ClassNotFoundException {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 * @throws ClassNotFoundException 
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	private void initComponents() throws ClassNotFoundException {
		java.awt.GridBagConstraints gridBagConstraints;

		panelPrincipal = new JPanel();
		panelHeader = new JPanel();
		btnHome = new JButton();
		dataList = new JComboBox();
		btnOk = new JButton();
		panelData = new JPanel();

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		setPreferredSize(new java.awt.Dimension(512, 400));
		getContentPane().setLayout(null);

		panelPrincipal.setPreferredSize(new java.awt.Dimension(500, 400));
		panelPrincipal.setLayout(new java.awt.BorderLayout());

		panelHeader.setPreferredSize(new java.awt.Dimension(500, 40));
		panelHeader.setLayout(new java.awt.GridBagLayout());

		btnHome.setText("H");
		btnHome.setHorizontalAlignment(SwingConstants.RIGHT);
		btnHome.setPreferredSize(new java.awt.Dimension(40, 40));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
		panelHeader.add(btnHome, gridBagConstraints);

		dataList.setModel(new DefaultComboBoxModel(new String[] { "Données en temps réel", "Graphique des temperatures" }));
		dataList.setPreferredSize(new java.awt.Dimension(250, 40));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
		panelHeader.add(dataList, gridBagConstraints);

		btnOk.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
		btnOk.setText("OK");
		btnOk.setPreferredSize(new java.awt.Dimension(60, 40));
		btnOk.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 70);
		panelHeader.add(btnOk, gridBagConstraints);

		panelPrincipal.add(panelHeader, java.awt.BorderLayout.NORTH);

		JFreeChart chart = createChart(createDataset());
		panelChart = new ChartPanel(chart);
		panelChart.setVisible(false);
		panelData.setLayout(new java.awt.GridBagLayout());

		panelPrincipal.add(panelChart, java.awt.BorderLayout.CENTER);

		getContentPane().add(panelPrincipal);
		panelPrincipal.setBounds(0, 0, 490, 340);

		pack();
	}// </editor-fold>                        

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
		// TODO add your handling code here:
		String dataChoise;
		dataChoise = (String) dataList.getSelectedItem();
		
		switch (dataChoise) {
		case "Données en temps réel":
			panelChart.setVisible(false);
			panelData.setVisible(true);
			break;
			
		default:
			panelData.setVisible(false);
			panelChart.setVisible(true);
			break;
		}
	}                                        

	private static Connection getDbConnection() throws SQLException, ClassNotFoundException{
		// TODO complete variable Database
		String URL = "jdbc:mysql://192.168.188.132:3306/frigalconnectal";
		String USER = "java";
		String PASS = ".etml-";
		
		//Chargement du driver
		Class.forName("com.mysql.jdbc.Driver");
		//connexion à la bd
		Connection conn = DriverManager.getConnection(URL, USER, PASS);
		
		return conn;
	}
	/**
	 * Creates a dataset, consisting of two series of monthly data.
	 *
	 * @return The dataset.
	 * @throws ClassNotFoundException 
	 */
	private static XYDataset createDataset() throws ClassNotFoundException {
		
		TimeSeries s1 = new TimeSeries("Humidité");
		TimeSeries s2 = new TimeSeries("Température");
		ResultSet rs = null;
			
		try {
			Connection dataFridge = getDbConnection();
			Statement stmt = dataFridge.createStatement();
			
			String sqlRequest = "SELECT * FROM t_temphum";
			rs = stmt.executeQuery(sqlRequest); 
			
			while(rs.next()){
				float hum = rs.getFloat("tmp_humidity");
				float temp = rs.getFloat("tmp_temperature");
				Date date = rs.getDate("tmp_date");
				// TODO define time laps chart Second, Minute, Hour, Day, Month, Year
				s1.add(new Minute(date), hum);
				s2.add(new Minute(date), temp);
			}

			rs.close();
			stmt.close();
			dataFridge.close();
		} catch (SQLException e) {
			String exception = e.toString();
			JOptionPane.showMessageDialog(panelPrincipal ,"Voici l'exception : " + exception,"Titre : exception",JOptionPane.ERROR_MESSAGE);
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		// ******************************************************************
		//  More than 150 demo applications are included with the JFreeChart
		//  Developer Guide...for more information, see:
		//
		//  >   http://www.object-refinery.com/jfreechart/guide.html
		//
		// ******************************************************************

		TimeSeriesCollection dataset = new TimeSeriesCollection();
		dataset.addSeries(s1);
		dataset.addSeries(s2);

		return dataset;

	}
	
	
	/**
	 * Creates a chart.
	 *
	 * @param dataset  a dataset.
	 *
	 * @return A chart.
	 */
	private static JFreeChart createChart(XYDataset dataset) {

		JFreeChart chart = ChartFactory.createTimeSeriesChart(
				"Graphique des températures et humidités",  // title
				"Date",             // x-axis label
				"Temperture/Humidité",   // y-axis label
				dataset,            // data
				true,               // create legend?
				true,               // generate tooltips?
				false               // generate URLs?
				);

		chart.setBackgroundPaint(Color.white);

		XYPlot plot = (XYPlot) chart.getPlot();
		plot.setBackgroundPaint(Color.white);
		plot.setDomainGridlinePaint(Color.lightGray);
		plot.setRangeGridlinePaint(Color.lightGray);
		plot.setAxisOffset(new RectangleInsets(5.0, 5.0, 5.0, 5.0));
		plot.setDomainCrosshairVisible(true);
		plot.setRangeCrosshairVisible(true);


		DateAxis axis = (DateAxis) plot.getDomainAxis();
		axis.setDateFormatOverride(new SimpleDateFormat("MMM-yyyy"));

		return chart;

	}
	
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					new Data().setVisible(true);
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
	}

	// Variables declaration - do not modify
	private ChartPanel panelChart;
	private JPanel panelData;
	private JButton btnHome;
	private JButton btnOk;
	private JComboBox dataList;
	private static JPanel panelPrincipal;
	private JPanel panelHeader;
	// End of variables declaration                   


}
